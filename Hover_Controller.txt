#[
	Issues:
		- Could use further optimization
]#
@name Hover Controller
@inputs Height:number
@outputs RelHeight:number
@persist TMass TIner:vector Dheight:number E:entity Target This:entity DebugText:string RD:ranger
@trigger 

#We implement the Hover Controller for Hover and Stabilization
if(first()){
    This = entity()
    This:setMass(0)
    E = This:isWeldedTo()
    E:setColor(vec(255,255,255),255)
    Target = 50+E:height()
    Dheight  = 50 + E:pos():z()
    runOnTick(1)
    function defineRanger(){
        rangerHitWater(1)
        rangerHitEntities(1)
        rangerDefaultZero(1)
    }
    defineRanger()
    TMass = E:mass()
    TIner = E:inertia()
    foreach(K,V:entity=E:getConstraints()){
        V:setMass(0)
    }
}
#vec(X,Y,Z)
RD = rangerOffset(1000,This:pos(),vec(0,0,-1))
if(Height != 0) {
    Target = Height+E:height()
}
Dist = RD:distance()
if(Dist >= 1){
    Force = ((Target-Dist) - E:vel():z()) * (TMass+This:mass())
} else {
    Force = ((Dheight-E:pos():z()) - E:vel():z())*(TMass+This:mass())
}
RelHeight = Dist
E:applyForce(vec(0,0,Force))
#Use quaternions for stabilization along the pitch and roll axis
Ang = E:angles()
CurrentQuat = quat(Ang)
TargetQuat = quat(ang(0,Ang:yaw(),0))
Q = TargetQuat/CurrentQuat
Torque = E:toLocal(rotationVector(Q)+E:pos())
E:applyTorque((Torque - E:angVelVector())*TIner)
